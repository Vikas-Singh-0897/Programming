---------------------------------------------------------------------------
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Array ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
---------------------------------------------------------------------------
1. Largest Element in an Array
---------------------------------------------------------------------------
int largest(int arr[], int size)
{
    int largest;
    
    for (int i = 0; i < size; i++)
    {
        if (arr[i] > largest)
        {
            largest = arr[i];
        }
    }
    return largest;
}
---------------------------------------------------------------------------
2. 2nd Largest Element in an Array
---------------------------------------------------------------------------
int secondLargest(int arr[], int size)
{
    int largest = arr[0], secondLargest = -1;
    for (int i = 1; i < size; i++)
    {
        if (arr[i] > largest && largest > secondLargest)
        {
            secondLargest = largest;
            largest = arr[i];
        }
        else if (arr[i] > secondLargest)
        {
            secondLargest = arr[i];
        }
    }
    return secondLargest;
}
---------------------------------------------------------------------------
3. Check if Array is Sorted or Not
---------------------------------------------------------------------------
bool isSorted(int arr[], int size)
{
    for (int i = 0; i < size - 1; i++)
    {
        if (arr[i + 1] < arr[i])
        {
            return false;
        }
    }
    return true;
}
---------------------------------------------------------------------------
4. Remove Duplicate Element from a Sorted Array 
---------------------------------------------------------------------------
void removeDuplicate(int arr[], int size)
{
    int j = 0;
    for (int i = 1; i < size; i++)
    {
        if (arr[i] != arr[j])
        {
            arr[j + 1] = arr[i];
            j++;
        }
    }
}
---------------------------------------------------------------------------
5. Rotate Array by k steps
---------------------------------------------------------------------------

---------------------------------------------------------------------------
6. 
---------------------------------------------------------------------------

---------------------------------------------------------------------------
7. 